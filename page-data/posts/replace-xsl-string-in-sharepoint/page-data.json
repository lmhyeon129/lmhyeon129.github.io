{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/replace-xsl-string-in-sharepoint/","result":{"data":{"markdownRemark":{"id":"099dc7c0-264d-523c-bbd0-cdc186deb6ad","html":"<h1 id=\"xsl-에서-문자열-치환\"><a href=\"#xsl-%EC%97%90%EC%84%9C-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%B9%98%ED%99%98\" aria-label=\"xsl 에서 문자열 치환 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>xsl 에서 문자열 치환</h1>\n<p>뉴스 목록 화면에서 하이퍼링크가 문제가 되어서 이를 수정</p>\n<h3 id=\"현상은\"><a href=\"#%ED%98%84%EC%83%81%EC%9D%80\" aria-label=\"현상은 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>현상은</h3>\n<p>뉴스 목록 화면에 본문 요약글을 보여주게 되어 있는데, 본문에서 하이퍼링크가 있는 경우에 기존 팝업을 띄우게 되어있는 a 태그 안에서 또 a태그가 생성이 되어서 마크업이 의도한대로 구성되지 않음</p>\n<h3 id=\"진행사항\"><a href=\"#%EC%A7%84%ED%96%89%EC%82%AC%ED%95%AD\" aria-label=\"진행사항 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>진행사항</h3>\n<p>처음엔 xsl 소스에서 표기되는 .을 유니코드 ONE DOT LEADER와 같은 다른 문자로 치환하면 될 것이라 예상. 하지만 애초에 에디터에서 본문에 하이퍼링크가 걸린 채로 Summary가 추출되는 듯 하다.(하지만 DB에는 그렇게 저장이 되어있지 않음… 본문에서 새로 Summary를 하는 과정이 있는걸까)</p>\n<p>그래서, xsl에서 . 하나만 치환하는 것이 아닌, <code class=\"language-text\">&lt;a href ~~~~&gt;www.a.com&lt;/a&gt;</code> 여기 부분을 <code class=\"language-text\">www.a.com</code> 으로 치환하는 방법으로 진행.</p>\n<p>링크가 있는 요약글에 대해서 치환 진행</p>\n<p>조건문을 넣어서 변수를 할당 하려니까 구문 자체가 익숙한 구문이 아니네…</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>variable</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>변수<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>choose</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>when</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>조건<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>값<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>when</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>otherwise</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>value-of</span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>값2<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>otherwise</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>choose</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">xsl:</span>variable</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>위에 쓴게</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> 조건 <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> 변수 <span class=\"token operator\">=</span> <span class=\"token string\">\"값\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> 변수 <span class=\"token operator\">=</span> <span class=\"token string\">\"값2\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이거에 대응하는것..</p>\n<p>sharepoint 2010은 역시 xsl 2.0을 사용하지 않았다… xsl 1.0 에서는 문자열 치환, 정규식 지원 그런게 없기 때문에 string 왼쪽 추출, 오른쪽 추출을 반복해서 문자열 조각을 만든다음 그것들을 concat.</p>\n<p>이렇게 해서 a 태그를 치환하는데 성공, 개발서버에 반영</p>\n<p><code class=\"language-text\">substring-before($a, &quot;abc&quot;)</code> : 문자열 a에서 abc 앞부분만 가져온다. abc는 포함하지 않음</p>\n<p><code class=\"language-text\">substring-after($a, &quot;abc&quot;)</code> : 문자열 a에서 abc 뒤부분만 가져온다. abc는 포함하지 않음</p>\n<p><code class=\"language-text\">concat($a, $b, $c)</code> : 문자열 a,b,c 를 붙인다.</p>\n<p><code class=\"language-text\">string-join( ($a,$b,$c), &#39;//&#39;)</code> : 문자열 a,b,c, 를 붙이고, 사이에 // 를 넣는다.</p>\n<p>template을 만들어야 하려나,, 재귀함수로 replace를 구현해서 링크를 여러 개 집어넣은 본문에서도 대응할 수 있도록 진행</p>\n<p>그게 아니면 하나의 링크에만 대응하게끔 구현</p>\n<p>replace만 지원한다면 다음 세 줄로 끝을 낼 수 있는걸…</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>variable</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>content_ko<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>replace(replace($ko, '<span class=\"token entity\" title=\"&lt;\">&amp;lt;</span>.*?<span class=\"token entity\" title=\"&gt;\">&amp;gt;</span>', ''), '<span class=\"token entity\" title=\"&lt;\">&amp;lt;</span>/a<span class=\"token entity\" title=\"&gt;\">&amp;gt;</span>', '' )<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>variable</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>content_en<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>replace(replace($en, '<span class=\"token entity\" title=\"&lt;\">&amp;lt;</span>.*?<span class=\"token entity\" title=\"&gt;\">&amp;gt;</span>', ''), '<span class=\"token entity\" title=\"&lt;\">&amp;lt;</span>/a<span class=\"token entity\" title=\"&gt;\">&amp;gt;</span>', '' )<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">xsl:</span>variable</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>content_zh<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">select</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>replace(replace($zh, '<span class=\"token entity\" title=\"&lt;\">&amp;lt;</span>.*?<span class=\"token entity\" title=\"&gt;\">&amp;gt;</span>', ''), '<span class=\"token entity\" title=\"&lt;\">&amp;lt;</span>/a<span class=\"token entity\" title=\"&gt;\">&amp;gt;</span>', '' )<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<h3 id=\"참고-링크\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EB%A7%81%ED%81%AC\" aria-label=\"참고 링크 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 링크</h3>\n<p><a href=\"http://www.xsltfunctions.com/xsl/fn_concat.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://www.xsltfunctions.com/xsl/fn_concat.html</a></p>\n<p><a href=\"http://www.xsltfunctions.com/xsl/fn_string-join.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://www.xsltfunctions.com/xsl/fn_string-join.html</a></p>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/ms256119(v=vs.100).aspx\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://msdn.microsoft.com/en-us/library/ms256119(v=vs.100).aspx</a></p>\n<p><a href=\"http://zvon.org/xxl/XSLTreference/Output/xpathFunctionIndex.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://zvon.org/xxl/XSLTreference/Output/xpathFunctionIndex.html</a></p>","fields":{"slug":"/posts/replace-xsl-string-in-sharepoint/","tagSlugs":["/tag/share-point/"]},"frontmatter":{"date":"2017-01-05T00:00:00.000Z","description":"SharePoint의 xsl 에서 문자열 치환하는 과정","tags":["SharePoint"],"title":"Replace xsl string","socialImage":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/replace-xsl-string-in-sharepoint/"}}}