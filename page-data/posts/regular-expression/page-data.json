{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/regular-expression/","result":{"data":{"markdownRemark":{"id":"bbe8eea3-eda8-56a2-b955-d1eed6d12ee1","html":"<h1 id=\"regular-expression\"><a href=\"#regular-expression\" aria-label=\"regular expression permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Regular Expression</h1>\n<p>정규표현식 - Regex에 대한 대략적인 설명 입니다.</p>\n<h3 id=\"용도\"><a href=\"#%EC%9A%A9%EB%8F%84\" aria-label=\"용도 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>용도</h3>\n<p>url 검사 할 때 사용하거나, notepad++ 과 같은 정규표현식 사용 가능한 편집기에서 찾아바꾸기를 할 때 사용합니다.\n문자열 관련해서 바꾸기를 하거나 문자열 검사를 할 때 유용하게 쓸 수 있습니다.</p>\n<h3 id=\"match\"><a href=\"#match\" aria-label=\"match permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>match</h3>\n<p><a href=\"http://regexr.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://regexr.com/</a> &#x3C;- 이 사이트에서 테스트 및 설명을 찾아볼 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// javascript에서 사용하는 사례 입니다</span>\n<span class=\"token keyword\">var</span> phone <span class=\"token operator\">=</span> <span class=\"token regex\">/01\\d-?\\d{3,4}-?\\d{4}/g</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 핸드폰 번호</span>\n\t<span class=\"token comment\">// 01(숫자 한개)(-가 나오거나 안 나오거나)(숫자3개 또는 4개)(-가 나오거나 안 나오거나)(숫자 4개)</span>\n<span class=\"token keyword\">var</span> isPhone <span class=\"token operator\">=</span> phone<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"010-1234-5678\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">var</span> isPhone2 <span class=\"token operator\">=</span> phone<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"011-123-4567\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">var</span> isPhone3 <span class=\"token operator\">=</span> phone<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"02-123-4123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token keyword\">var</span> email <span class=\"token operator\">=</span> <span class=\"token regex\">/\\w[^@\\s]*@[^\\s]+\\.\\w+/g</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 이메일 주소</span>\n\t<span class=\"token comment\">// (문자하나)(@, 공백 아닌게 0번이상)@(공백아닌게 한번이상).(문자가 한번이상)</span>\n<span class=\"token keyword\">var</span> isEmail <span class=\"token operator\">=</span> email<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ll@naver.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">var</span> isEmail2 <span class=\"token operator\">=</span> email<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hoi@hoi@naver.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<p><code class=\"language-text\">/~~~/g</code> 에서 g의 의미는 전체에서 찾으라는 의미 입니다.(하나만 찾고 그만두는게 아니라 일치하는 모든 문자열을 찾음)</p>\n<p>많이 쓰는 키워드는 아래에 있습니다.</p>\n<p>한 글자에 해당하는 키워드</p>\n<ul>\n<li>\\w : 문자(특수문자 제외)</li>\n<li>\\d : 숫자</li>\n<li>\\s : 공백(탭, 스페이스)</li>\n<li>. : 모든 문자(줄바꿈은 제외)</li>\n<li>[asdf] : a,s,d,f 중에 하나</li>\n<li><sup id=\"fnref-asdf\"><a href=\"#fn-asdf\" class=\"footnote-ref\">asdf</a></sup> : a,s,d,f 가 아닌 것</li>\n</ul>\n<p>횟수를 의미하는 키워드</p>\n<ul>\n<li>* : 0번 이상</li>\n<li>+ : 한번 이상</li>\n<li>? : 0번 또는 한번</li>\n<li>{1,3} : 1번~3번</li>\n<li>{4} : 4번</li>\n</ul>\n<p>위에 있는 키워드들을 문자 그대로 쓰고 싶으면 <code class=\"language-text\">\\</code> 와 같이 사용하면 됩니다.(<code class=\"language-text\">\\.</code> : 모든 문자가 아니고 점)</p>\n<h3 id=\"capture\"><a href=\"#capture\" aria-label=\"capture permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>capture</h3>\n<p>괄호<code class=\"language-text\">( )</code>를 이용하여 정규표현식으로 검사한 문자열의 일부를 가져올 수 있습니다.\n위의 email의 예시에서, @뒤의 도메인만 가져와서 통계를 내고자 할 때, 다음과 같이 도메인에 해당하는 문자열을 ( )로 포함하여 $1과 같이 가져올 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// javascript에서 사용하는 사례 입니다</span>\n<span class=\"token keyword\">var</span> email <span class=\"token operator\">=</span> <span class=\"token regex\">/\\w[^@\\s]*@([^\\s]+\\.\\w+)/g</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 위의 예에서 @뒤부터 괄호로 포함</span>\n<span class=\"token keyword\">var</span> domain <span class=\"token operator\">=</span> <span class=\"token string\">\"hoi@naver.com\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> <span class=\"token string\">\"$1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// naver.com</span></code></pre></div>","fields":{"slug":"/posts/regular-expression/","tagSlugs":["/tag/regex/"]},"frontmatter":{"date":"2017-02-28T00:00:00.000Z","description":"아주 대략적인 정규표현식에 대한 설명","tags":["Regex"],"title":"Regular Expression","socialImage":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/regular-expression/"}}}