{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/integrate-web-config-nodes","result":{"data":{"markdownRemark":{"id":"ccabcb08-2aec-5a76-a151-c126ce8abf75","html":"<h2 id=\"config-파일-통합\"><a href=\"#config-%ED%8C%8C%EC%9D%BC-%ED%86%B5%ED%95%A9\" aria-label=\"config 파일 통합 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Config 파일 통합</h2>\n<p>가상 디렉토리와, 웹 어플리케이션에 있는 web.config 파일들을 통합</p>\n<h4 id=\"이걸-하게-된-이유는\"><a href=\"#%EC%9D%B4%EA%B1%B8-%ED%95%98%EA%B2%8C-%EB%90%9C-%EC%9D%B4%EC%9C%A0%EB%8A%94\" aria-label=\"이걸 하게 된 이유는 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이걸 하게 된 이유는..</h4>\n<p>aspnet에서 제공하는 web.config 파일 암호화 복호화 기능이 우리가 의도한 대로 암/복호화가 되지 않음</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>connectionStrings</span><span class=\"token punctuation\">></span></span> \n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>remove</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>aa<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>add</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>aa<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">connectionString</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>blabla<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">providerName</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>System.Data.SqlClient<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>connectionStrings</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>위 내용을 포함하는 web.config 파일이 있을 때, 이를 암호화 하게 되면 <code class=\"language-text\">&lt;remove name=&quot;aa&quot; /&gt;</code> 이 부분을 지워버려서 상위에서 상속받는 web.config 의 aa와 중복이 되어 오류가 발생함</p>\n<p>그래서..\n중복된 connectionString을 모두 최상위(웹 사이트)의 web.config에 통합하게끔 진행.\n이름이 같은데 connectionString 이 다른 경우는 확인이 필요함..</p>\n<h4 id=\"찾는-방법\"><a href=\"#%EC%B0%BE%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"찾는 방법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>찾는 방법</h4>\n<ul>\n<li>connectionStrings 한정으로는 <code class=\"language-text\">&lt;.*add .*connectionStrings.*</code> 이렇게 찾으면 포함된 파일의 목록 추출이 가능</li>\n<li>appsettings는 다시 고려(비밀번호 리스트를 가지고 or조건으로 다 묶어서 찾거나, 속성 중에 password 관련된 이름의 속성이 있는지를 탐색)</li>\n<li>web application/virtual directory 에서 connectionStrings 있는 web.config 찾은 다음, 해당 내용과 web site의 web.config와 비교…는 하지말고 그냥 다 csv로 export</li>\n<li>csv format은 fullname, connectionString 2개만 저장하고 나머지는 후처리..</li>\n</ul>\n<h4 id=\"powershell\"><a href=\"#powershell\" aria-label=\"powershell permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>powershell</h4>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token keyword\">Function</span> getConnectionString <span class=\"token punctuation\">(</span><span class=\"token variable\">$webObj</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$objType</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$arr</span> = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token variable\">$webObj</span> <span class=\"token punctuation\">|</span> <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">## website, webapp, vdir 모두 physicalPath를 가지고 있음</span>\n        <span class=\"token variable\">$path</span> = <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>physicalPath\n\n        <span class=\"token comment\">## %SystemDrive% 와 같은 시스템 환경변수 치환</span>\n        <span class=\"token comment\">## split으로 잘라서 제일 앞에 있는 환경변수를 치환하게끔 구성..</span>\n        <span class=\"token comment\">## 모든 환경변수를 치환하는것은 여기서는 지원하지 않음 </span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$path</span> <span class=\"token operator\">-match</span> <span class=\"token string\">\"%[^%]+%\"</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$split</span> = <span class=\"token variable\">$path</span> <span class=\"token operator\">-</span>split <span class=\"token string\">'%'</span>\n            <span class=\"token variable\">$path</span> = <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$split</span><span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">|</span> <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token function\">ls</span> Env:\\<span class=\"token variable\">$_</span><span class=\"token punctuation\">)</span></span>.Value})<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$split</span><span class=\"token punctuation\">[</span>2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span>\"</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$config</span> = <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span><span class=\"token punctuation\">)</span></span>\\web.config\"</span>\n        <span class=\"token comment\">## Test-Path 는 경로가 실제로 있는지 확인</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">test-path</span> <span class=\"token variable\">$config</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">## xml parsing 해서 다 저장</span>\n            <span class=\"token namespace\">[xml]</span><span class=\"token variable\">$xmldoc</span> = <span class=\"token function\">Get-Content</span> <span class=\"token variable\">$config</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$xmldoc</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$xmldoc</span><span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span>connectionStrings<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$xmldoc</span><span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span>connectionStrings<span class=\"token punctuation\">.</span>connectionString<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token variable\">$xmldoc</span><span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span>connectionStrings<span class=\"token punctuation\">.</span>connectionString <span class=\"token punctuation\">|</span> <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token variable\">$e</span> = <span class=\"token function\">new-Object</span> PSObject <span class=\"token operator\">-</span>Property @<span class=\"token punctuation\">{</span>\n                                command = <span class=\"token string\">\"connectionString\"</span>\n                                path = <span class=\"token variable\">$config</span>\n                                hostname = hostname\n                                <span class=\"token function\">type</span> = <span class=\"token variable\">$objType</span>\n                                useage = <span class=\"token string\">\"yes\"</span>\n                                name = <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>name\n                                connectionString = <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>connectionString\n                                providerName = <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>providerName\n                            <span class=\"token punctuation\">}</span>\n                            <span class=\"token variable\">$arr</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$e</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$xmldoc</span><span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span>connectionStrings<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token variable\">$xmldoc</span><span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span>connectionStrings<span class=\"token punctuation\">.</span>add <span class=\"token punctuation\">|</span> <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token variable\">$e</span> = <span class=\"token function\">new-Object</span> PSObject <span class=\"token operator\">-</span>Property @<span class=\"token punctuation\">{</span>\n                                command = <span class=\"token string\">\"add\"</span>\n                                path = <span class=\"token variable\">$config</span>\n                                hostname = hostname\n                                <span class=\"token function\">type</span> = <span class=\"token variable\">$objType</span>\n                                useage = <span class=\"token string\">\"yes\"</span>\n                                name = <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>name\n                                connectionString = <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>connectionString\n                                providerName = <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>providerName\n                            <span class=\"token punctuation\">}</span>\n                            <span class=\"token variable\">$arr</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$e</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$xmldoc</span><span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span>connectionStrings<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token variable\">$xmldoc</span><span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span>connectionStrings<span class=\"token punctuation\">.</span>remove <span class=\"token punctuation\">|</span> <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token variable\">$e</span> = <span class=\"token function\">new-Object</span> PSObject <span class=\"token operator\">-</span>Property @<span class=\"token punctuation\">{</span>\n                                command = <span class=\"token string\">\"remove\"</span>\n                                path = <span class=\"token variable\">$config</span>\n                                hostname = hostname\n                                <span class=\"token function\">type</span> = <span class=\"token variable\">$objType</span>\n                                useage = <span class=\"token string\">\"yes\"</span>\n                                name = <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>name\n                            <span class=\"token punctuation\">}</span>\n                            <span class=\"token variable\">$arr</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$e</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$xmldoc</span><span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span>connectionStrings<span class=\"token punctuation\">.</span><span class=\"token string\">\"#comment\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token variable\">$xmldoc</span><span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span>connectionStrings<span class=\"token punctuation\">.</span><span class=\"token string\">\"#comment\"</span> <span class=\"token punctuation\">|</span> <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">{</span>\n                            <span class=\"token variable\">$e</span> = <span class=\"token function\">new-Object</span> PSObject <span class=\"token operator\">-</span>Property @<span class=\"token punctuation\">{</span>\n                                command = <span class=\"token string\">\"comment\"</span>\n                                path = <span class=\"token variable\">$config</span>\n                                hostname = hostname\n                                <span class=\"token function\">type</span> = <span class=\"token variable\">$objType</span>\n                                useage = <span class=\"token string\">\"no\"</span>\n                                name = <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>name\n                                connectionString = <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>connectionString\n                                providerName = <span class=\"token variable\">$_</span><span class=\"token punctuation\">.</span>providerName\n                            <span class=\"token punctuation\">}</span>\n                            <span class=\"token variable\">$arr</span> <span class=\"token operator\">+=</span> <span class=\"token variable\">$e</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$arr</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token function\">Import-Module</span> WebAdministration\n\n<span class=\"token variable\">$sites</span> = Get<span class=\"token operator\">-</span>Website \n<span class=\"token variable\">$applications</span> = Get<span class=\"token operator\">-</span>WebApplication\n<span class=\"token variable\">$virtualDirs</span> = Get<span class=\"token operator\">-</span>WebVirtualDirectory\n\n<span class=\"token variable\">$wholeList</span> = @<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">## http://stackoverflow.com/questions/4988226/how-do-i-pass-multiple-parameters-into-a-function-in-powershell</span>\n<span class=\"token variable\">$wholeList</span> <span class=\"token operator\">+=</span> getConnectionString <span class=\"token variable\">$sites</span> <span class=\"token string\">\"webSite\"</span> \n<span class=\"token variable\">$wholeList</span> <span class=\"token operator\">+=</span> getConnectionString <span class=\"token variable\">$applications</span> <span class=\"token string\">\"app\"</span>\n<span class=\"token variable\">$wholeList</span> <span class=\"token operator\">+=</span> getConnectionString <span class=\"token variable\">$virtualDirs</span> <span class=\"token string\">\"vdir\"</span>\n\n<span class=\"token comment\">## Export-Csv : 'InputObject' 매개 변수가 null이므로 인수를 해당 매개 변수에 바인딩할 수 없습니다.</span>\n<span class=\"token comment\">## 위 오류가 나오는 경우가 있는데 where {$_} 로 파이프받은 객체를 받아서 null아닌 멤버만 다시 넘겨주는 과정 추가하여 해결</span>\n<span class=\"token comment\">## where {$_} == where {$_ -ne $null}</span>\n<span class=\"token comment\">## 오류 나는 원인은 배열에 null 멤버가 껴있어서 나는 현상..</span>\n<span class=\"token comment\">## http://en.community.dell.com/techcenter/powergui/f/4834/t/19571829</span>\n<span class=\"token variable\">$wholeList</span> <span class=\"token punctuation\">|</span> where <span class=\"token punctuation\">{</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Export-Csv</span> <span class=\"token operator\">-</span>Encoding UTF8 <span class=\"token string\">\"nodeConnectionString<span class=\"token function\">$<span class=\"token punctuation\">(</span>hostname<span class=\"token punctuation\">)</span></span>.csv\"</span>\n<span class=\"token function\">Invoke-Item</span> ~</code></pre></div>","fields":{"slug":"/posts/integrate-web-config-nodes","tagSlugs":["/tag/iis/","/tag/config/"]},"frontmatter":{"date":"2016-09-09T00:00:00.000Z","description":"web.config 암복호화를 위해서 부모-자식 간 web.config 파일 통합","tags":["IIS","Config"],"title":"web config 파일 통합","socialImage":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/integrate-web-config-nodes"}}}